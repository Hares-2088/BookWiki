name: Deploy BookWiki App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 -uuser -ppwd --silent" --health-interval=10s --health-retries=5
        ports:
          - 3320:3306  # Changed the host port to 3320 to avoid conflicts
        env:
          MYSQL_ROOT_PASSWORD: rootpwd
          MYSQL_DATABASE: auth-db
          MYSQL_USER: user
          MYSQL_PASSWORD: pwd

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Stop and remove existing MySQL container
      - name: Stop and remove existing MySQL container
        run: |
          docker ps -q --filter "name=bookwiki_mysql_1" | grep -q . && docker stop bookwiki_mysql_1 && docker rm bookwiki_mysql_1

      # Build and push bookwiki-frontend Docker image
      - name: Build and push bookwiki-frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bookwiki-frontend:latest ./bookwiki-frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/bookwiki-frontend:latest

      # Build and push books-service Docker image
      - name: Build and push books-service Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/books-service:latest ./books-service
          docker push ${{ secrets.DOCKER_USERNAME }}/books-service:latest

      # Deploy with Docker Compose
      - name: Deploy services with Docker Compose
        run: |
          docker-compose up --build -d
          sleep 30 # Wait for containers to be fully up and running

      # Check that MySQL service is running
      - name: Check MySQL Health
        run: |
          docker-compose exec mysql mysqladmin ping -uuser -ppwd
