name: Deploy BookWiki App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
#        options: --health-cmd="mysqladmin ping -h 127.0.0.1 -uuser -ppwd --silent" --health-interval=30s --health-retries=10
        ports:
          - 3320:3306
        env:
          MYSQL_ROOT_PASSWORD: rootpwd
          MYSQL_DATABASE: auth-db
          MYSQL_USER: user
          MYSQL_PASSWORD: pwd

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start MySQL container
        run: |
          docker-compose up -d mysql
          sleep 30

      - name: Print data.sql for debugging
        run: |
          cat ./books-service/src/main/resources/data.sql

#      - name: Wait for MySQL to be healthy
#        run: |
#          for i in {1..30}; do
#            if docker-compose exec mysql mysqladmin ping -h 127.0.0.1 -uuser -ppwd --silent; then
#              echo "MySQL is healthy"
#              exit 0
#            fi
#            echo "Waiting for MySQL to be healthy... Attempt $i"
#            docker-compose logs mysql
#            sleep 10
#          done
#          echo "MySQL did not become healthy in time"
#          exit 1

      - name: Build and push bookwiki-frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bookwiki-frontend:latest ./bookwiki-frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/bookwiki-frontend:latest

      - name: Build and push books-service Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/books-service:latest ./books-service
          docker push ${{ secrets.DOCKER_USERNAME }}/books-service:latest

      - name: Deploy services with Docker Compose
        run: |
          docker-compose up --build -d
          sleep 30